package com.jdbc.dao.impl;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import com.jdbc.dao.MemberDAO;
import com.jdbc.exception.DuplicateIDException;
import com.jdbc.exception.RecordNotFoundException;
import com.jdbc.vo.Member;

import config.ServerInfo;

public class MemberDAOImpl implements MemberDAO{
	//싱글톤
	private static MemberDAOImpl dao = new MemberDAOImpl();
	private MemberDAOImpl() {
		System.out.println("CustomDAOImpl Creating...");
	}
	public static MemberDAOImpl getInstance() {
		return dao;
	}
	
	
	
	//////////////공통적인 로직 //////////////// 이거 왜 public....?
	public Connection getConnect() throws SQLException {
		Connection conn = DriverManager.getConnection(ServerInfo.URL, ServerInfo.USER, ServerInfo.PASSWORD);
		System.out.println("DB Connect...");
		return conn;
	}
	public void closeAll(Connection conn, PreparedStatement ps) throws SQLException {
		if(ps!=null) ps.close();
		if(conn!=null)conn.close();
	}
	public void closeAll(Connection conn, PreparedStatement ps, ResultSet rs) throws SQLException {
		if(rs!=null) rs.close();
		closeAll(conn, ps);
	}
	
	public boolean idExists(int id, Connection conn) throws SQLException {
		
		PreparedStatement ps = null;
		ResultSet rs = null;
		
		String query = "SELECT id FROM member WHERE id=?";
		ps = conn.prepareStatement(query);
		ps.setInt(1, id);
		rs = ps.executeQuery();
		return rs.next();   // 있으면 true 없으면 false 
		
	}
	
	
	@Override
	public void insertMember(Member member) throws SQLException, DuplicateIDException {
		Connection conn = null;
		PreparedStatement ps = null;
		try {
			conn = getConnect();
			if(!idExists(member.getId(), conn)) { //id가 없다면.. 추가진행
				
				String query = "INSERT INTO member (id, name, email, phone) VALUES(seq_id.nextVal,?,?,?)";
				ps = conn.prepareStatement(query);
				//ps.setInt(1, member.getId());
				ps.setString(1, member.getName());
				ps.setString(2, member.getEmail());
				ps.setString(3, member.getPhone());
				
				System.out.println(ps.executeUpdate() + "명 회원 등록~~");
			}else {
				// 이미 존재할 때 
				throw new DuplicateIDException("등록된 회원입니다");
			}
			
			
		}finally {
			closeAll(conn, ps);
		}
	}

	@Override
	public void deleteMember(int id) throws SQLException, RecordNotFoundException{
		Connection conn = null;
		PreparedStatement ps = null;
		try {
			conn = getConnect();
			if(idExists(id, conn)) { //id가 있다면... 추가진행
				String query = "DELETE member WHERE id=?";
				ps = conn.prepareStatement(query);
				ps.setInt(1, id);
				
				System.out.println(ps.executeUpdate() + "명 회원 삭제~~");
			}else {
				// 없을때
				throw new RecordNotFoundException("없는 회원입니다");
			}
			
		}finally {
			closeAll(conn, ps);
		}
		
	}

	@Override
	public void updateMember(Member member) throws SQLException {
		Connection conn = null;
		PreparedStatement ps = null;
		
		try {
			conn = getConnect();
			
			String query = "UPDATE member SET id=?, name=?, email=?, phone=? WHERE id = ?";
			ps = conn.prepareStatement(query);
			
			ps.setInt(1, member.getId());
			ps.setString(2, member.getName());
			ps.setString(3, member.getEmail());
			ps.setString(4, member.getPhone());
			ps.setInt(5, member.getId());
			
			System.out.println(ps.executeUpdate() + "명 수정 성공");
			
		} finally {
			closeAll(conn, ps);
		}
		
	}

	@Override
	public Member getMember(int id) throws SQLException {
		Connection conn = null;
		PreparedStatement ps = null;
		ResultSet rs = null;
		Member m = new Member();
		try {
			conn = getConnect();
			
			String query = "SELECT name, email, phone FROM member WHERE id=?";
			ps = conn.prepareStatement(query);
			ps.setInt(1, id);
			
			rs = ps.executeQuery();
			if(rs.next()) {   // 다 출력이라 while 끝까지 
				m = new Member(rs.getString("name"), rs.getString("email"), rs.getString("phone"));
			}
			
		} finally {
			closeAll(conn, ps, rs);
		}
		return m;
	}

	@Override
	public ArrayList<Member> getMember() throws SQLException {
		Connection conn = null;
		PreparedStatement ps = null;
		ResultSet rs = null;
		ArrayList<Member> members = new ArrayList<>();
		try {
			conn = getConnect();
			
			String query = "SELECT name, email, phone FROM member";
			ps = conn.prepareStatement(query);
			
			rs = ps.executeQuery();
			while(rs.next()) {   // 다 출력이라 while 끝까지 
				members.add(new Member(rs.getString("name"), rs.getString("email"), rs.getString("phone")));
			}
			
		} finally {
			closeAll(conn, ps, rs);
		}
		return members;
	}

	@Override
	public ArrayList<Member> getMember(String name) throws SQLException {
		Connection conn = null;
		PreparedStatement ps = null;
		ResultSet rs = null;
		ArrayList<Member> members = new ArrayList<>();
		try {
			conn = getConnect();
			
			String query = "SELECT name, email, phone FROM member WHERE name=?";
			ps = conn.prepareStatement(query);
			ps.setString(1, name);
			
			rs = ps.executeQuery();
			while(rs.next()) {   // 다 출력이라 while 끝까지 
				members.add(new Member(rs.getString("name"), rs.getString("email"), rs.getString("phone")));
			}
			
		} finally {
			closeAll(conn, ps, rs);
		}
		return members;
	}
	

}
